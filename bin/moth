#!/usr/bin/env python

import os, sys
from os.path import join, isfile, dirname
from subprocess import check_call

def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc:  # Python >2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else:
            raise

def find_vcs_root(test, dirs=(".git",)):
    prev, test = None, os.path.abspath(test)
    while prev != test:
        if any(os.path.isdir(os.path.join(test, d)) for d in dirs):
            return test
        prev, test = test, os.path.abspath(os.path.join(test, os.pardir))
    raise Exception("No project root found")

def fetch(target):
    path = dirname(target)
    if path:
        mkdir_p(path)
    check_call(["cp", "/Users/pe/arena/bin/dump-args", target])

def run(args):
    root_path = find_vcs_root(dirname(__file__))
    dot_dir = ".moth"

    target_fn = "foo"

    fname = join(root_path,dot_dir,target_fn)

    if not isfile(fname):
        print "Fetching:", fname

        fetch(fname)

    os.execlp(fname, fname, *args)

run(sys.argv[1:])
